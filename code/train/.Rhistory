pacf(Apple.logreturn)
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
tsdiag(m.logreturn)
shapiro.test(resdiuals(m.logreturn))
shapiro.test(residuals(m.logreturn))
McLeod.Li.test(y=Apple.logreturn)
McLeod.Li.test(y=rnoem(500))
McLeod.Li.test(y=rnorm(500))
eacf(Apple.logreturn^2)
adf.test(Apple.logreturn)
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
init(["AAPL","005930.KS"],"2016-01-01","2018-07-01","2018-07-02","2018-10-01")
init(list("AAPL","005930.KS"),"2016-01-01","2018-07-01","2018-07-02","2018-10-01")
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
a=init(list("AAPL","005930.KS"),"2016-01-01","2018-07-01","2018-07-02","2018-10-01")
source('~/ST4245 Project.R')
a=init(list("AAPL","005930.KS"),"2016-01-01","2018-07-01","2018-07-02","2018-10-01")
a
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
a=init(list("AAPL","005930.KS"),"2016-01-01","2018-07-01","2018-07-02","2018-10-01")
a
a$AAPL
source('~/ST4245 Project.R')
a=init(list("AAPL","005930.KS"),"2016-01-01","2018-07-01","2018-07-02","2018-10-01")
a
source('~/ST4245 Project.R')
a=init(list("AAPL","005930.KS"),"2016-01-01","2018-07-01","2018-07-02","2018-10-01")
source('~/ST4245 Project.R')
a=init(list("AAPL","005930.KS"),"2016-01-01","2018-07-01","2018-07-02","2018-10-01")
a
normalize(a)
source('~/ST4245 Project.R')
normalize(a)
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
normalize(a)
source('~/ST4245 Project.R')
normalize(a)
source('~/ST4245 Project.R')
x = normalize(a)
source('~/ST4245 Project.R')
x = normalize(a)
x
source('~/ST4245 Project.R')
x = normalize(a)
x
source('~/ST4245 Project.R')
x
x = normalize(a)
x
source('~/ST4245 Project.R')
x = normalize(a)
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
x = normalize(a)
x = normalize(a)
x
source('~/ST4245 Project.R')
normalize(a)
source('~/ST4245 Project.R')
normalize(a)
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
x = normalize(a)
x
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
analyze(x)
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
analyze(x)
ord = list()
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
ord[["AAPL"]] = c(0,0,0)
ord[["005930.KS"]] = c(0,0,0)
main(x,ord,"norm")
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
main(x,ord,"norm")
source('~/ST4245 Project.R')
main(x,ord,"norm")
source('~/ST4245 Project.R')
main(x,ord,"norm")
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
main(x,ord,"norm")
main(x,ord,"sGarch","norm")
help("ugarchspec")
source('~/ST4245 Project.R')
main(x,ord,"sGarch","norm")
source('~/ST4245 Project.R')
main(x,ord,"sGARCH","norm")
help(ugarchfit)
source('~/ST4245 Project.R')
main(x,ord,"sGARCH","norm")
y = main(x,ord,"sGARCH","norm")
y
y$AAPL
source('~/ST4245 Project.R')
z = main(x,ord,"sGARCH","norm")
y$AAPL
z$AAPL
source('~/ST4245 Project.R')
z = main(x,ord,"sGARCH","norm")
z$AAPL
help("parLapply")
parLappy(cl= NULL,fun <- function(t){ main(x,ord,"sGARCH",t)},X=c("norm","sted"))
parLapply(cl= NULL,fun <- function(t){ main(x,ord,"sGARCH",t)},X=c("norm","sted"))
help("makeCluster")
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
help(clusterExport)
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
main(ret,mean_order,"sGARCH","norm")
source('~/ST4245 Project.R')
main(ret,mean_order,"sGARCH","norm")
main(ret,mean_order,"sGARCH","sted")
main(ret,mean_order,"sGARCH","std")
warings()
warnings()
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
ans
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
main(ret,mean_order,'sGARCH','norm')
source('~/ST4245 Project.R')
main(ret,mean_order,'sGARCH','norm')
source('~/ST4245 Project.R')
main(ret,mean_order,'sGARCH','norm')
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
main(ret,mean_order,'sGARCH','norm')
auto.arima(ret[[1]])
auto.arima(ret[[1]][[1]])
auto.arima(ret[[2]][[1]])
arima(ret[[1]][[1]],order = c(1,0,1))
arima(ret[[2]][[1]],c(2,0,1))
arima(ret[[2]][[1]],c(2,0,1))$order
arima(ret[[2]][[1]],c(2,0,1))$or
help(arima)
arima(ret[[2]][[1]],c(2,0,1))$arma
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
ans[[1]]
as.data.frame(ans)
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
detectCores()
source('~/ST4245 Project.R')
ans
ans[[1]]
ans[[1]][[1]]
ans[[1]][[1]][[1]]
AAPL <- matrix(2,4)
SAM <- matrix(2,4)
for (i in names(ans)) {
for (j in names(ans[[i]])){
AAPL[i,j] <- infocriteria(garch_set[[i]][[j]][[1]])[1]
SAM[i,j] <- infocriteria(garhc_set[[i]][[j]][[2]])[1]
}
}
print(AAPL)
print(SAM)
AAPL <- matrix(2,4)
SAM <- matrix(2,4)
for (i in names(ans)) {
for (j in names(ans[[i]])){
AAPL[i,j] <- infocriteria(ans[[i]][[j]][[1]])[1]
SAM[i,j] <- infocriteria(ans[[i]][[j]][[2]])[1]
}
}
print(AAPL)
print(SAM)
AAPL <- matrix(0,2,4)
SAM <- matrix(0,2,4)
for (i in names(ans)) {
for (j in names(ans[[i]])){
AAPL[i,j] <- infocriteria(garch_set[[i]][[j]][[1]])[1]
SAM[i,j] <- infocriteria(garhc_set[[i]][[j]][[2]])[1]
}
}
print(AAPL)
print(SAM)
AAPL <- matrix(0,2,4)
SAM <- matrix(0,2,4)
for (i in names(ans)) {
for (j in names(ans[[i]])){
AAPL[i,j] <- infocriteria(ans[[i]][[j]][[1]])[1]
SAM[i,j] <- infocriteria(ans[[i]][[j]][[2]])[1]
}
}
print(AAPL)
print(SAM)
infocriteria[[1]][[1]][[1]]
infocriteria(ans[[1]][[1]][[1]])
infocriteria(ans[[1]][[1]][[1]])[1]
AAPL[1,1] <- infocriteria(ans[[1]][[1]][[1]])[1]
AAPL
for (i in names(ans)) {
+     for (j in names(ans[[i]])){
+         AAPL[i,j] <- infocriteria(ans[[i]][[j]][[1]])[1]
+         SAM[i,j] <- infocriteria(ans[[i]][[j]][[2]])[1]
+     }
+ }
AAPL
for (seq(1,2)){}
for (i in seq(1,2)){
for (j in seq(1,4)) {
AAPL[i,j] = infocriteria(ans[[i]][[j]][[1]])[1]
}
}
AAPL
for (i in seq(1,2)){
for (j in seq(1,4)) {
SAM[i,j] = infocriteria(ans[[i]][[j]][[1]])[1]
}
}
SAM
for (i in seq(1,2)){
for (j in seq(1,4)) {
SAM[i,j] = infocriteria(ans[[i]][[j]][[2]])[1]
}
}
SAM
ans[[2]][[2]][[1]]
ans[[1]][[1]][[1]]
ans[[1]][[2]][[1]]
ans[[3]][[3]][[1]]
ans[[1]][[3]][[1]]
ans[[1]][[4]][[1]]
AAPL
SAM
ans[[2]][[2]][[2]]
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
arma_fit(ret,5,5)
source('~/ST4245 Project.R')
arma_fit(ret,5,5)
source('~/ST4245 Project.R')
arma_fit(ret,5,5)
source('~/ST4245 Project.R')
arma_fit(ret,5,5)
source('~/ST4245 Project.R')
install.packages(RColorBrewer)
install.packages("RColorBrewer")
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
source('~/ST4245 Project.R')
post_garch_analyze(ans)
ans[[2]][[2]][[1]]
ans[[2]][[2]][[2]]
post_garch_analyze(ans)
source('~/ST4245 Project.R')
help(mvtnorm)
source('C:/Users/mingx/Downloads/NUS Y4 S1/QF5210/financial time series_ theory and computation/Assignments/hw4.R')
simulation(5,"norm")
source('C:/Users/mingx/Downloads/NUS Y4 S1/QF5210/financial time series_ theory and computation/Assignments/hw4.R')
simulation(5,"norm")
source('C:/Users/mingx/Downloads/NUS Y4 S1/QF5210/financial time series_ theory and computation/Assignments/hw4.R')
source('C:/Users/mingx/Downloads/NUS Y4 S1/QF5210/financial time series_ theory and computation/Assignments/hw4.R')
source('C:/Users/mingx/Downloads/NUS Y4 S1/QF5210/financial time series_ theory and computation/Assignments/hw4.R')
source('C:/Users/mingx/Downloads/NUS Y4 S1/QF5210/financial time series_ theory and computation/Assignments/hw4.R')
simulation(5,"norm")
source('C:/Users/mingx/Downloads/NUS Y4 S1/QF5210/financial time series_ theory and computation/Assignments/hw4.R')
simulation(5,"norm")
simulation(1000000,"norm")
ans <- simulation(100000,"norm")
mean(ans)
var(ans)
source('C:/Users/mingx/Downloads/NUS Y4 S1/QF5210/financial time series_ theory and computation/Assignments/hw4.R')
ans <- simulation(100000,"norm")
mean(ans)
var(ans)
source('C:/Users/mingx/Downloads/NUS Y4 S1/QF5210/financial time series_ theory and computation/Assignments/hw4.R')
ans <- simulation(10000,"norm")
source('C:/Users/mingx/Downloads/NUS Y4 S1/QF5210/financial time series_ theory and computation/Assignments/hw4.R')
ans <- simulation(10000,"norm")
mean(ans)
source('C:/Users/mingx/Downloads/NUS Y4 S1/QF5210/financial time series_ theory and computation/Assignments/hw4.R')
ans = simulation(100,"norm")
mean(ans)
var(ans)
source('C:/Users/mingx/Downloads/NUS Y4 S1/QF5210/financial time series_ theory and computation/Assignments/hw4.R')
source('C:/Users/mingx/Downloads/NUS Y4 S1/QF5210/financial time series_ theory and computation/Assignments/hw4.R')
ans
source('C:/Users/mingx/Downloads/NUS Y4 S1/QF5210/financial time series_ theory and computation/Assignments/hw4.R')
source('C:/Users/mingx/Downloads/NUS Y4 S1/QF5210/financial time series_ theory and computation/Assignments/hw4.R')
ans
source('C:/Users/mingx/Downloads/NUS Y4 S1/QF5210/financial time series_ theory and computation/Assignments/hw4.R')
ans
source('C:/Users/mingx/Downloads/NUS Y4 S1/QF5210/financial time series_ theory and computation/Assignments/hw4.R')
ans
source('C:/Users/mingx/Downloads/NUS Y4 S1/QF5210/financial time series_ theory and computation/Assignments/hw4.R')
ans
source('C:/Users/mingx/Downloads/NUS Y4 S1/QF5210/financial time series_ theory and computation/Assignments/hw4.R')
source('C:/Users/mingx/Downloads/NUS Y4 S1/QF5210/financial time series_ theory and computation/Assignments/hw4.R')
test <-function(thresh){
at <- rmvnorm(1000,c(0,0,0),sigma = matrix(c(1, 0.2, 0, 0.2, 1, 0.24, 0, 0.24, 1),3,3))
rt <- matrix(0,1000,3)
rt[1,1] <- at[1,1]
rt[1,2] <- at[1,2]
rt[1,3] <- at[1,3]
for (i in seq(2,1000)){
rt[i,1] <- 0.6*rt[i-1,1]-0.3*rt[i-1,2]+0.1*rt[i-1,3]+at[i,1]
rt[i,2] <- -0.4*rt[i-1,1]+0.2*rt[i-1,2]-0.4*rt[i-1,3]+at[i,2]
rt[i,3] <- 0.4*rt[i-1,1]+0.3*rt[i-1,2]+0.9*rt[i-1,3]+at[i,3]
}
hold = 0
n = 0
for (i in seq(1,1000)) {
if (hold == 0) {
if (rt[i,1]+rt[i,2]+rt[i,3] < -thresh) {
hold = 1
}
} else if (hold == 1) {
if (rt[i,1]+rt[i,2]+rt[i,3] > thresh) {
hold = 0
n = n+1
}
}
return(n*2*thresh)
}
}
test(0.1)
test(0.3)
test(0.5)
source('C:/Users/mingx/Downloads/NUS Y4 S1/QF5210/financial time series_ theory and computation/Assignments/hw4.R')
test <-function(thresh){
at <- rmvnorm(1000,c(0,0,0),sigma = matrix(c(1, 0.2, 0, 0.2, 1, 0.24, 0, 0.24, 1),3,3))
rt <- matrix(0,1000,3)
rt[1,1] <- at[1,1]
rt[1,2] <- at[1,2]
rt[1,3] <- at[1,3]
for (i in seq(2,1000)){
rt[i,1] <- 0.6*rt[i-1,1]-0.3*rt[i-1,2]+0.1*rt[i-1,3]+at[i,1]
rt[i,2] <- -0.4*rt[i-1,1]+0.2*rt[i-1,2]-0.4*rt[i-1,3]+at[i,2]
rt[i,3] <- 0.4*rt[i-1,1]+0.3*rt[i-1,2]+0.9*rt[i-1,3]+at[i,3]
}
hold = 0
n = 0
for (i in seq(1,1000)) {
print(rt[i,1]+rt[i,2]+rt[i,3])
if (hold == 0) {
if (rt[i,1]+rt[i,2]+rt[i,3] < -thresh) {
hold = 1
}
} else if (hold == 1) {
if (rt[i,1]+rt[i,2]+rt[i,3] > thresh) {
hold = 0
n = n+1
}
}
return(n*2*thresh)
}
}
test(0.1)
source('C:/Users/mingx/Downloads/NUS Y4 S1/QF5210/financial time series_ theory and computation/Assignments/hw4.R')
test <-function(thresh){
at <- rmvnorm(1000,c(0,0,0),sigma = matrix(c(1, 0.2, 0, 0.2, 1, 0.24, 0, 0.24, 1),3,3))
rt <- matrix(0,1000,3)
rt[1,1] <- at[1,1]
rt[1,2] <- at[1,2]
rt[1,3] <- at[1,3]
for (i in seq(2,1000)){
rt[i,1] <- 0.6*rt[i-1,1]-0.3*rt[i-1,2]+0.1*rt[i-1,3]+at[i,1]
rt[i,2] <- -0.4*rt[i-1,1]+0.2*rt[i-1,2]-0.4*rt[i-1,3]+at[i,2]
rt[i,3] <- 0.4*rt[i-1,1]+0.3*rt[i-1,2]+0.9*rt[i-1,3]+at[i,3]
}
hold = 0
n = 0
for (i in seq(1,1000)) {
print(rt[i,1]+rt[i,2]+rt[i,3])
if (hold == 0) {
if (rt[i,1]+rt[i,2]+rt[i,3] < -thresh) {
hold = 1
}
} else if (hold == 1) {
if (rt[i,1]+rt[i,2]+rt[i,3] > thresh) {
hold = 0
n = n+1
}
}
}
return(n*2*thresh)
}
test(0.1)
test(0.3)
test(0.5)
test(1)
source('C:/Users/mingx/Downloads/NUS Y4 S1/QF5210/financial time series_ theory and computation/Assignments/hw4.R')
source('C:/Users/mingx/Downloads/NUS Y4 S1/QF5210/financial time series_ theory and computation/Assignments/hw4.R')
source('C:/Users/mingx/Downloads/NUS Y4 S1/QF5210/financial time series_ theory and computation/Assignments/hw4.R')
source('C:/Users/mingx/Downloads/NUS Y4 S1/QF5210/financial time series_ theory and computation/Assignments/hw4.R')
source('C:/Users/mingx/Downloads/NUS Y4 S1/QF5210/financial time series_ theory and computation/Assignments/hw4.R')
source('C:/Users/mingx/Downloads/NUS Y4 S1/QF5210/financial time series_ theory and computation/Assignments/hw4.R')
source('C:/Users/mingx/Downloads/NUS Y4 S1/QF5210/financial time series_ theory and computation/Assignments/hw4.R')
library(reticulate)
install.packages("reticulate")
setwd("~/NExT/4EBaseMetal/code/utils")
setwd("~/NExT/4EBaseMetal/code/train")
source('~/NExT/4EBaseMetal/code/train/try.R')
source('~/NExT/4EBaseMetal/code/train/try.R')
source('~/NExT/4EBaseMetal/code/train/try.R')
reticulate::py_config()
source('~/NExT/4EBaseMetal/code/train/try.R')
source('~/NExT/4EBaseMetal/code/train/try.R')
source('~/NExT/4EBaseMetal/code/train/try.R')
source('~/NExT/4EBaseMetal/code/train/try.R')
source('~/NExT/4EBaseMetal/code/train/try.R')
source('~/NExT/4EBaseMetal/code/train/try.R')
source('~/NExT/4EBaseMetal/code/train/try.R')
source('~/NExT/4EBaseMetal/code/train/try.R')
source('~/NExT/4EBaseMetal/code/train/try.R')
source('~/NExT/4EBaseMetal/code/train/try.R')
source('~/NExT/4EBaseMetal/code/train/try.R')
source('~/NExT/4EBaseMetal/code/train/try.R')
source('~/NExT/4EBaseMetal/code/train/try.R')
source('~/NExT/4EBaseMetal/code/train/try.R')
source('~/NExT/4EBaseMetal/code/train/try.R')
source('~/NExT/4EBaseMetal/code/train/try.R')
source('~/NExT/4EBaseMetal/code/train/try.R')
source('~/NExT/4EBaseMetal/code/train/try.R')
source('~/NExT/4EBaseMetal/code/train/try.R')
source('~/NExT/4EBaseMetal/code/train/try.R')
source('~/NExT/4EBaseMetal/code/train/try.R')
source('~/NExT/4EBaseMetal/code/train/try.R')
source('~/NExT/4EBaseMetal/code/train/try.R')
source('~/NExT/4EBaseMetal/code/train/try.R')
source('~/NExT/4EBaseMetal/code/train/try.R')
source('~/NExT/4EBaseMetal/code/train/try.R')
source('~/NExT/4EBaseMetal/code/train/try.R')
source('~/NExT/4EBaseMetal/code/train/try.R')
source('~/NExT/4EBaseMetal/code/train/try.R')
source('~/NExT/4EBaseMetal/code/train/try.R')
source('~/NExT/4EBaseMetal/code/train/try.R')
source('~/NExT/4EBaseMetal/code/train/try.R')
